---
- name: build project
  hosts: lcl
  gather_facts: no
  force_handlers: yes

  ###############################################################################
  vars:

    doc_root: /data/www/pyramid.local
    wordpress_version: 4.9.8
    public_plugins:
    - { name: '', version: '' }

  ###############################################################################
  tasks:

  #==============================================================================
  #  - name: update git sub-modules
  #    command: git submodule update --recursive --init
  #    args:
  #      chdir: '{{ project_path }}'

  - name: create project directories
    file:
      dest: '{{ item }}'
      state: directory
    with_items:
    - '{{ project_path }}/wproot/'

  - name: check for auth.json
    stat:
      path: '{{ project_path }}/auth.json'
    register: auth_json

  - name: composer install
    composer:
      command: install
      working_dir: '{{ project_path }}'
      no_dev: false
    when: auth_json.stat.exists

  - name: install WordPress with wp-cli (fallback)
    command: wp core download --version="{{ wordpress_version }}" --allow-root
    args:
      chdir: '{{ project_path }}/wproot/wordpress'
    register: install_wordpress
    changed_when: "'Error:' not in install_wordpress.stderr"
    failed_when: false
    when: auth_json.stat.exists == False

  - name: prune WordPress files
    file:
      name: '{{ item }}'
      state: absent
    with_items:
    - '{{ project_path }}/wproot/wordpress/wp-content/plugins'
    - '{{ project_path }}/wproot/wordpress/wp-content/themes'

  - name: create internal directories
    file:
      dest: '{{ item }}'
      owner: www-data
      group: www-data
      mode: g+ws
      state: directory
    become: yes
    with_items:
    - '{{ doc_root }}'
    - '{{ doc_root }}/wp-content/themes'
    - '{{ doc_root }}/wp-content/uploads'
    - '/var/www/pyramid.local'

  #  - name: syncronize WordPress from project to vagrant
  #    synchronize:
  #      src: '{{ item.src }}'
  #      dest: '{{ item.dest }}'
  #      archive: no
  #      recursive: yes
  #      times: yes
  #    become: yes
  #    with_items:
  #    - { src: '{{ project_path }}/web/wp/', dest: '{{ doc_root }}/' }
  #    - { src: '{{ project_path }}/web/iframe-busters/', dest: '{{ doc_root }}/' }

  # I suspect that this is no longer required for the vagrant since we are running the sites from
  # withing the /vagrant share.
  #  - name: link from vagrant to project resources
  #    file:
  #      src: '{{ item.src }}'
  #      dest: '{{ item.dest }}'
  #      owner: www-data
  #      force: yes
  #      state: link
  #    become: yes
  #    with_items:
  #    - { src: '{{ project_path | realpath }}/wproot', dest: '{{ doc_root }}/wproot' }

  - import_tasks: nodejs_tasks.yml
